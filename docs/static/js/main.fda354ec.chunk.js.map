{"version":3,"sources":["pages/Home/index.js","pages/Login/index.js","Routes.js","boot.js","index.js"],"names":["VERSION","getRandom","n","m","Math","floor","random","getStart","campusId","Promise","resolve","reject","data","latitude","longitude","type","axios","post","then","res","randomCircuit","catch","getEnd","circuitString","distance","time","_circuitString","moment","format","circuitInfo","JSON","stringify","version","valid","id","platform","stepRate","invalidReason","validDistance","phone","startTime","valueOf","endTime","add","calories","parseInt","segment","totalTime","latitudeArr","longitudeArr","speedArr","requireLatitude","requireLongitude","i","push","speed","md5","_data","Object","keys","sort","map","item","Home","useState","list","setList","useRequest","obj","a","get","runningRule","rule","userCampus","e","end","manual","onSuccess","message","success","listRun","onError","error","loading","run","pageNum","subtract","pageSize","items","console","log","listLoading","useEffect","title","subTitle","extra","to","direction","style","width","size","Text","href","onFinish","Item","name","addonBefore","addonAfter","htmlType","block","itemLayout","dataSource","renderItem","Meta","avatar","CheckCircleTwoTone","twoToneColor","CloseCircleTwoTone","description","Login","history","useHistory","orgs","setOrgs","params","orgType","label","value","url","method","result","token","localStorage","setItem","initialValues","username","password","rules","required","maxLength","Password","options","Routes","path","component","render","getItem","defaults","baseURL","headers","interceptors","request","use","config","toLowerCase","authorization","response","code","Msg","warning","ReactDOM","StrictMode","requestMethod","param","document","getElementById"],"mappings":"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","file":"static/js/main.fda354ec.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  List,\r\n  message,\r\n  PageHeader,\r\n  Space,\r\n  Typography,\r\n} from \"antd\";\r\nimport { CloseCircleTwoTone, CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { useRequest } from \"ahooks\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport md5 from \"js-md5\";\r\n\r\nconst VERSION = \"V 2.5.6\";\r\n\r\nconst getRandom = (n, m) => Math.floor(Math.random() * (m - n + 1)) + n;\r\n\r\nconst getList = (pageNum) =>\r\n  new Promise((resolve, reject) => {\r\n    const startTime = moment().subtract(90, \"days\").valueOf();\r\n    const endTime = moment().valueOf();\r\n    axios\r\n      .post(\"running/api/v1/running/recordList\", {\r\n        pageNum,\r\n        pageSize: 20,\r\n        startTime,\r\n        endTime,\r\n      })\r\n      .then((res) => {\r\n        resolve(res.items);\r\n      })\r\n      .catch((e) => {\r\n        reject(\"获取列表失败\");\r\n      });\r\n  });\r\n\r\nconst getUser = () =>\r\n  new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"/health/api/v1/homePage/user\")\r\n      .then((res) => {\r\n        const {\r\n          runningRule: { rule, userCampus },\r\n        } = res;\r\n        //{rule:{},userCampus:{}}\r\n        resolve({\r\n          rule,\r\n          userCampus,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        reject(false);\r\n      });\r\n  });\r\n\r\nconst getStart = (campusId) =>\r\n  new Promise((resolve, reject) => {\r\n    const data = {\r\n      campusId,\r\n      latitude: `30.786842${getRandom(10000, 99999)}`,\r\n      longitude: `103.886128${getRandom(10000, 99999)}`,\r\n      type: 1,\r\n    };\r\n    axios\r\n      .post(\"/running/api/v1/running/start\", { ...data })\r\n      .then((res) => {\r\n        const { randomCircuit } = res;\r\n        //{...randomCircuit}\r\n        resolve({ ...randomCircuit });\r\n      })\r\n      .catch(() => {\r\n        reject(false);\r\n      });\r\n  });\r\nconst getEnd = (circuitString = {}, distance = 0, time = 0) =>\r\n  new Promise((resolve, reject) => {\r\n    //circuitString = { runningRule, randomCircuit }\r\n    //{runningRule:{rule:{},userCampus:{}},randomCircuit:{}}\r\n    const _circuitString = {\r\n      ...circuitString,\r\n      time: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    };\r\n    const data = {\r\n      circuitInfo: {\r\n        circuitString: JSON.stringify(_circuitString),\r\n      },\r\n      version: VERSION,\r\n      valid: 1,\r\n      id: 1,\r\n      type: 1,\r\n      platform: 1,\r\n      stepRate: getRandom(40, 80),\r\n      invalidReason: \"\",\r\n      distance: distance,\r\n      validDistance: distance,\r\n      phone: \"\",\r\n      startTime: moment().valueOf(),\r\n      endTime: moment().add(time, \"seconds\").valueOf(),\r\n      calories: parseInt(distance / 20),\r\n    };\r\n    const segment = [\r\n      data.startTime + getRandom(10, 100),\r\n      data.endTime - getRandom(1500, 2500),\r\n    ];\r\n    data.totalTime = parseInt((segment[1] - segment[0]) / 1000);\r\n    const latitudeArr = [],\r\n      longitudeArr = [],\r\n      speedArr = [];\r\n    const { requireLatitude, requireLongitude } = _circuitString.randomCircuit;\r\n    for (let i = 0; i < 3; i++) {\r\n      latitudeArr.push(requireLatitude[i]);\r\n      longitudeArr.push(requireLongitude[i]);\r\n      speedArr.push(getRandom(2, 20));\r\n    }\r\n    data.circuitInfo = {\r\n      ...data.circuitInfo,\r\n      latitude: [latitudeArr],\r\n      longitude: [longitudeArr],\r\n      segment: [segment],\r\n      speed: speedArr,\r\n      calories: parseInt(distance / 20),\r\n    };\r\n    data.md5 = md5(\r\n      `EndRunningInfo{a='${data.invalidReason}', b=${data.totalTime}, c=${data.distance}, d=${data.type}, e=${data.startTime}, f=${data.endTime}, g='${data.phone}'}`\r\n    );\r\n    const _data = {};\r\n    Object.keys(data)\r\n      .sort()\r\n      .map((item) => (_data[item] = data[item]));\r\n    axios\r\n      .post(`/running/api/v1/running/end3`, _data)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch(() => {\r\n        reject(false);\r\n      });\r\n  });\r\n\r\nfunction Home() {\r\n  const [list, setList] = useState([]);\r\n\r\n  const { loading, run } = useRequest(\r\n    (obj) => {\r\n      return new Promise(async (resolve, reject) => {\r\n        const runningRule = await getUser().catch(() =>\r\n          reject(\"获取用户信息失败\")\r\n        );\r\n\r\n        const randomCircuit = await getStart(\r\n          runningRule.rule.campusId\r\n        ).catch(() => reject(\"获取跑步信息失败\"));\r\n\r\n        const end = await getEnd(\r\n          { runningRule, randomCircuit },\r\n          obj.distance,\r\n          obj.time\r\n        ).catch((e) => {\r\n          reject(\"结束跑步失败\");\r\n        });\r\n        const { invalidReason, valid } = end;\r\n        if (valid === 1) resolve(true);\r\n        else reject(invalidReason);\r\n      });\r\n    },\r\n    {\r\n      manual: true,\r\n      onSuccess: () => {\r\n        message.success(\"跑步完成\");\r\n        listRun();\r\n      },\r\n      onError: (e) => {\r\n        message.error(e);\r\n        listRun();\r\n      },\r\n    }\r\n  );\r\n\r\n  const { loading: listLoading, run: listRun } = useRequest(() => getList(1), {\r\n    manual: true,\r\n    onSuccess: (res) => {\r\n      setList(res);\r\n      console.log(res);\r\n    },\r\n    onError: (e) => {\r\n      message.error(e);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    listRun();\r\n  }, []); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title=\"乐健\"\r\n        subTitle=\"完全免费\"\r\n        extra={\r\n          <Link to=\"/login\">\r\n            <Button type=\"link\">切换账号</Button>\r\n          </Link>\r\n        }\r\n      >\r\n        <Space direction=\"vertical\" style={{ width: \"100%\" }} size=\"large\">\r\n          <Card title=\"告知\">\r\n            <Typography.Text>\r\n              1.本功能属于纯前端实现，不存在收集，保留用户信息等\r\n              <br />\r\n            </Typography.Text>\r\n            <Typography.Text>\r\n              2.仅供学习研究使用，切勿用于非法或商业等用途\r\n              <br />\r\n            </Typography.Text>\r\n            <Typography.Text>\r\n              3.完全免费开源，请勿上当受骗，如果你是收费看到页面，请及时举报诈骗者\r\n              <br />\r\n            </Typography.Text>\r\n            <Typography.Text>\r\n              4.github:\r\n              <a href=\"https://github.com/jwjjgs/sport_jwjjgs_cn\">点我进入</a>\r\n              <br />\r\n            </Typography.Text>\r\n          </Card>\r\n          <Form\r\n            onFinish={(e) => {\r\n              run(e);\r\n            }}\r\n          >\r\n            <Form.Item name=\"distance\">\r\n              <Input addonBefore=\"距离\" addonAfter=\"米\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"time\">\r\n              <Input addonBefore=\"时间\" addonAfter=\"秒\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button htmlType=\"submit\" type=\"primary\" block loading={loading}>\r\n                奔跑\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n\r\n          <List\r\n            loading={listLoading}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={list}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    item.valid === 1 ? (\r\n                      <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\r\n                    ) : (\r\n                      <CloseCircleTwoTone twoToneColor=\"#eb2f96\" />\r\n                    )\r\n                  }\r\n                  title={`ID:${item.id}`}\r\n                  description={`距离:${item.validDistance}m 时间:${item.totalTime}s`}\r\n                />\r\n                <div>{item.startTime}</div>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Space>\r\n      </PageHeader>\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Input, message, PageHeader, Select } from \"antd\";\r\nimport { useRequest } from \"ahooks\";\r\nimport { useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [orgs, setOrgs] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/health/api/v2/organization/list\", {\r\n        params: {\r\n          orgType: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setOrgs(res.map((i) => ({ label: i.name, value: i.id })));\r\n      });\r\n  }, []);\r\n\r\n  const { loading, run } = useRequest(\r\n    (obj) => ({\r\n      url: \"/health/api/v1/login\",\r\n      method: \"post\",\r\n      data: { ...obj },\r\n    }),\r\n    {\r\n      manual: true,\r\n      onSuccess: (result) => {\r\n        const { token } = result;\r\n        localStorage.setItem(\"token\", `Bearer ${token}`);\r\n        message.success(\"登陆成功\");\r\n        history.push(\"/\");\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <PageHeader title=\"登录\">\r\n        <Form\r\n          onFinish={(e) => run(e)}\r\n          initialValues={{ username: \"\", password: \"\" }}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"请输入账号\" }]}\r\n          >\r\n            <Input addonBefore=\"账号\" type=\"tel\" maxLength={11} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            maxLength={16}\r\n            rules={[{ required: true, message: \"请输入密码\" }]}\r\n          >\r\n            <Input.Password addonBefore=\"密码\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"orgId\"\r\n            rules={[{ required: true, message: \"请选择地区\" }]}\r\n          >\r\n            <Select options={orgs} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button htmlType=\"submit\" type=\"primary\" block loading={loading}>\r\n              登录\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </PageHeader>\r\n    </>\r\n  );\r\n}\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nfunction Routes() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route\r\n          path=\"/\"\r\n          render={() =>\r\n            !localStorage.getItem(\"token\") ? <Redirect to=\"/login\" /> : <Home />\r\n          }\r\n        />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\nexport default Routes;\r\n","import { message as Msg } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://upes.legym.cn/\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/json;; charset=utf-8\";\r\naxios.interceptors.request.use((config) => {\r\n  if (\"post\" === config.method.toLowerCase() && typeof config.data === \"object\")\r\n    config.data = JSON.stringify(config.data);\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) config.headers.authorization = token;\r\n  return config;\r\n});\r\naxios.interceptors.response.use((res) => {\r\n  const {\r\n    data: { code, message, data },\r\n  } = res;\r\n  if (code !== 0) {\r\n    Msg.warning(message || \"未知原因\");\r\n    return Promise.reject();\r\n  }\r\n  if (message) Msg.success(message);\r\n  return data;\r\n});\r\n","import { UseRequestProvider } from \"ahooks\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Routes from \"./Routes\";\r\nimport \"./boot\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UseRequestProvider\r\n      value={{\r\n        requestMethod: (param) => axios(param),\r\n      }}\r\n    >\r\n      <Routes />\r\n    </UseRequestProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}