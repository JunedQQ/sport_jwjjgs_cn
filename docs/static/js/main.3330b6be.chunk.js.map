{"version":3,"sources":["pages/Home/index.js","pages/Login/index.js","Routes.js","boot.js","index.js"],"names":["VERSION","getRandom","n","m","Math","floor","random","getStart","campusId","Promise","resolve","reject","data","latitude","longitude","type","axios","post","then","res","randomCircuit","catch","getEnd","circuitString","distance","time","_circuitString","moment","format","circuitInfo","JSON","stringify","version","valid","id","platform","stepRate","invalidReason","validDistance","phone","startTime","valueOf","endTime","add","calories","parseInt","segment","totalTime","latitudeArr","longitudeArr","speedArr","requireLatitude","requireLongitude","i","push","speed","md5","_data","Object","keys","sort","map","item","Home","useState","list","setList","useRequest","obj","a","get","runningRule","rule","userCampus","e","end","manual","onSuccess","message","success","listRun","onError","error","loading","run","pageNum","subtract","pageSize","items","console","log","listLoading","useEffect","title","subTitle","extra","to","direction","style","width","size","Text","href","onFinish","Item","name","addonBefore","addonAfter","htmlType","block","itemLayout","dataSource","renderItem","Meta","avatar","CheckCircleTwoTone","twoToneColor","CloseCircleTwoTone","description","Login","history","useHistory","url","method","orgId","result","token","localStorage","setItem","initialValues","username","password","Password","Routes","path","component","render","getItem","defaults","baseURL","headers","interceptors","request","use","config","toLowerCase","authorization","response","code","Msg","warning","ReactDOM","StrictMode","value","requestMethod","param","document","getElementById"],"mappings":"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","file":"static/js/main.3330b6be.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Form,\n  Input,\n  List,\n  message,\n  PageHeader,\n  Space,\n  Typography,\n} from \"antd\";\nimport { CloseCircleTwoTone, CheckCircleTwoTone } from \"@ant-design/icons\";\nimport { useRequest } from \"ahooks\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport md5 from \"js-md5\";\n\nconst VERSION = \"V 2.5.6\";\n\nconst getRandom = (n, m) => Math.floor(Math.random() * (m - n + 1)) + n;\n\nconst getList = (pageNum) =>\n  new Promise((resolve, reject) => {\n    const startTime = moment().subtract(90, \"days\").valueOf();\n    const endTime = moment().valueOf();\n    axios\n      .post(\"running/api/v1/running/recordList\", {\n        pageNum,\n        pageSize: 20,\n        startTime,\n        endTime,\n      })\n      .then((res) => {\n        resolve(res.items);\n      })\n      .catch((e) => {\n        reject(\"获取列表失败\");\n      });\n  });\n\nconst getUser = () =>\n  new Promise((resolve, reject) => {\n    axios\n      .get(\"/health/api/v1/homePage/user\")\n      .then((res) => {\n        const {\n          runningRule: { rule, userCampus },\n        } = res;\n        //{rule:{},userCampus:{}}\n        resolve({\n          rule,\n          userCampus,\n        });\n      })\n      .catch(() => {\n        reject(false);\n      });\n  });\n\nconst getStart = (campusId) =>\n  new Promise((resolve, reject) => {\n    const data = {\n      campusId,\n      latitude: `30.786842${getRandom(10000, 99999)}`,\n      longitude: `103.886128${getRandom(10000, 99999)}`,\n      type: 1,\n    };\n    axios\n      .post(\"/running/api/v1/running/start\", { ...data })\n      .then((res) => {\n        const { randomCircuit } = res;\n        //{...randomCircuit}\n        resolve({ ...randomCircuit });\n      })\n      .catch(() => {\n        reject(false);\n      });\n  });\nconst getEnd = (circuitString = {}, distance = 0, time = 0) =>\n  new Promise((resolve, reject) => {\n    //circuitString = { runningRule, randomCircuit }\n    //{runningRule:{rule:{},userCampus:{}},randomCircuit:{}}\n    const _circuitString = {\n      ...circuitString,\n      time: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n    };\n    const data = {\n      circuitInfo: {\n        circuitString: JSON.stringify(_circuitString),\n      },\n      version: VERSION,\n      valid: 1,\n      id: 1,\n      type: 1,\n      platform: 1,\n      stepRate: getRandom(40, 80),\n      invalidReason: \"\",\n      distance: distance,\n      validDistance: distance,\n      phone: \"\",\n      startTime: moment().valueOf(),\n      endTime: moment().add(time, \"seconds\").valueOf(),\n      calories: parseInt(distance / 20),\n    };\n    const segment = [\n      data.startTime + getRandom(10, 100),\n      data.endTime - getRandom(1500, 2500),\n    ];\n    data.totalTime = parseInt((segment[1] - segment[0]) / 1000);\n    const latitudeArr = [],\n      longitudeArr = [],\n      speedArr = [];\n    const { requireLatitude, requireLongitude } = _circuitString.randomCircuit;\n    for (let i = 0; i < 3; i++) {\n      latitudeArr.push(requireLatitude[i]);\n      longitudeArr.push(requireLongitude[i]);\n      speedArr.push(getRandom(2, 20));\n    }\n    data.circuitInfo = {\n      ...data.circuitInfo,\n      latitude: [latitudeArr],\n      longitude: [longitudeArr],\n      segment: [segment],\n      speed: speedArr,\n      calories: parseInt(distance / 20),\n    };\n    data.md5 = md5(\n      `EndRunningInfo{a='${data.invalidReason}', b=${data.totalTime}, c=${data.distance}, d=${data.type}, e=${data.startTime}, f=${data.endTime}, g='${data.phone}'}`\n    );\n    const _data = {};\n    Object.keys(data)\n      .sort()\n      .map((item) => (_data[item] = data[item]));\n    axios\n      .post(`/running/api/v1/running/end3`, _data)\n      .then((res) => {\n        resolve(res);\n      })\n      .catch(() => {\n        reject(false);\n      });\n  });\n\nfunction Home() {\n  const [list, setList] = useState([]);\n\n  const { loading, run } = useRequest(\n    (obj) => {\n      return new Promise(async (resolve, reject) => {\n        const runningRule = await getUser().catch(() =>\n          reject(\"获取用户信息失败\")\n        );\n\n        const randomCircuit = await getStart(\n          runningRule.rule.campusId\n        ).catch(() => reject(\"获取跑步信息失败\"));\n\n        const end = await getEnd(\n          { runningRule, randomCircuit },\n          obj.distance,\n          obj.time\n        ).catch((e) => {\n          reject(\"结束跑步失败\");\n        });\n        const { invalidReason, valid } = end;\n        if (valid === 1) resolve(true);\n        else reject(invalidReason);\n      });\n    },\n    {\n      manual: true,\n      onSuccess: () => {\n        message.success(\"跑步完成\");\n        listRun();\n      },\n      onError: (e) => {\n        message.error(e);\n        listRun();\n      },\n    }\n  );\n\n  const { loading: listLoading, run: listRun } = useRequest(() => getList(1), {\n    manual: true,\n    onSuccess: (res) => {\n      setList(res);\n      console.log(res);\n    },\n    onError: (e) => {\n      message.error(e);\n    },\n  });\n\n  useEffect(() => {\n    listRun();\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        title=\"乐健\"\n        subTitle=\"完全免费\"\n        extra={\n          <Link to=\"/login\">\n            <Button type=\"link\">切换账号</Button>\n          </Link>\n        }\n      >\n        <Space direction=\"vertical\" style={{ width: \"100%\" }} size=\"large\">\n          <Card title=\"告知\">\n            <Typography.Text>\n              1.本功能属于纯前端实现，不存在收集，保留用户信息等\n              <br />\n            </Typography.Text>\n            <Typography.Text>\n              2.仅供学习研究使用，切勿用于非法或商业等用途\n              <br />\n            </Typography.Text>\n            <Typography.Text>\n              3.完全免费开源，请勿上当受骗，如果你是收费看到页面，请及时举报诈骗者\n              <br />\n            </Typography.Text>\n            <Typography.Text>\n              4.github:\n              <a href=\"https://github.com/jwjjgs/sport_jwjjgs_cn\">点我进入</a>\n              <br />\n            </Typography.Text>\n          </Card>\n          <Form\n            onFinish={(e) => {\n              run(e);\n            }}\n          >\n            <Form.Item name=\"distance\">\n              <Input addonBefore=\"距离\" addonAfter=\"米\" />\n            </Form.Item>\n            <Form.Item name=\"time\">\n              <Input addonBefore=\"时间\" addonAfter=\"秒\" />\n            </Form.Item>\n            <Form.Item>\n              <Button htmlType=\"submit\" type=\"primary\" block loading={loading}>\n                奔跑\n              </Button>\n            </Form.Item>\n          </Form>\n\n          <List\n            loading={listLoading}\n            itemLayout=\"horizontal\"\n            dataSource={list}\n            renderItem={(item) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    item.valid === 1 ? (\n                      <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                    ) : (\n                      <CloseCircleTwoTone twoToneColor=\"#eb2f96\" />\n                    )\n                  }\n                  title={`ID:${item.id}`}\n                  description={`距离:${item.validDistance}m 时间:${item.totalTime}s`}\n                />\n                <div>{item.startTime}</div>\n              </List.Item>\n            )}\n          />\n        </Space>\n      </PageHeader>\n    </>\n  );\n}\nexport default Home;\n","import React from \"react\";\nimport { Button, Form, Input, message, PageHeader } from \"antd\";\nimport { useRequest } from \"ahooks\";\nimport { useHistory } from \"react-router\";\nfunction Login() {\n  const history = useHistory();\n  const { loading, run } = useRequest(\n    (obj) => ({\n      url: \"/health/api/v1/login\",\n      method: \"post\",\n      data: { ...obj, orgId: 368 },\n    }),\n    {\n      manual: true,\n      onSuccess: (result) => {\n        const { token } = result;\n        localStorage.setItem(\"token\", `Bearer ${token}`);\n        message.success(\"登陆成功\");\n        history.push(\"/\");\n      },\n    }\n  );\n\n  return (\n    <>\n      <PageHeader title=\"登录\">\n        <Form\n          onFinish={(e) => run(e)}\n          initialValues={{ username: \"\", password: \"\" }}\n        >\n          <Form.Item name=\"username\">\n            <Input addonBefore=\"账号\" />\n          </Form.Item>\n          <Form.Item name=\"password\">\n            <Input.Password addonBefore=\"密码\" />\n          </Form.Item>\n          <Form.Item>\n            <Button htmlType=\"submit\" type=\"primary\" block loading={loading}>\n              登录乐健\n            </Button>\n          </Form.Item>\n        </Form>\n      </PageHeader>\n    </>\n  );\n}\nexport default Login;\n","import React from \"react\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nfunction Routes() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route\n          path=\"/\"\n          render={() =>\n            !localStorage.getItem(\"token\") ? <Redirect to=\"/login\" /> : <Home />\n          }\n        />\n      </Switch>\n    </HashRouter>\n  );\n}\nexport default Routes;\n","import { message as Msg } from \"antd\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://upes.legym.cn/\";\naxios.defaults.headers.post[\"Content-Type\"] =\n  \"application/json;; charset=utf-8\";\naxios.interceptors.request.use((config) => {\n  if (\"post\" === config.method.toLowerCase() && typeof config.data === \"object\")\n    config.data = JSON.stringify(config.data);\n  const token = localStorage.getItem(\"token\");\n  if (token) config.headers.authorization = token;\n  return config;\n});\naxios.interceptors.response.use((res) => {\n  const {\n    data: { code, message, data },\n  } = res;\n  if (code !== 0) {\n    Msg.warning(message || \"未知原因\");\n    return Promise.reject();\n  }\n  if (message) Msg.success(message);\n  return data;\n});\n","import { UseRequestProvider } from \"ahooks\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routes from \"./Routes\";\nimport \"./boot\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UseRequestProvider\n      value={{\n        requestMethod: (param) => axios(param),\n      }}\n    >\n      <Routes />\n    </UseRequestProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}