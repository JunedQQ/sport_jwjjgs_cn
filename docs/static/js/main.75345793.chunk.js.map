{"version":3,"sources":["pages/Home/index.js","pages/Login/index.js","pages/Map/index.js","Routes.js","boot.js","index.js"],"names":["VERSION","getRandom","n","m","Math","floor","random","getUser","Promise","resolve","reject","axios","get","then","res","runningRule","rule","userCampus","catch","getStart","campusId","data","latitude","longitude","type","post","randomCircuit","getEnd","circuitString","distance","time","_circuitString","moment","format","circuitInfo","JSON","stringify","version","valid","id","platform","stepRate","invalidReason","validDistance","phone","startTime","valueOf","endTime","add","calories","parseInt","segment","totalTime","latitudeArr","longitudeArr","speedArr","requireLatitude","requireLongitude","i","push","speed","md5","_data","Object","keys","sort","map","item","Home","useState","list","setList","useRequest","obj","a","e","end","manual","onSuccess","message","success","listRun","onError","error","loading","run","pageNum","subtract","pageSize","items","console","log","listLoading","useEffect","title","subTitle","extra","to","direction","style","width","size","Text","href","onFinish","Item","name","addonBefore","addonAfter","htmlType","block","itemLayout","dataSource","renderItem","Meta","avatar","CheckCircleTwoTone","twoToneColor","CloseCircleTwoTone","description","content","pathname","state","parse","ghost","onClick","copy","Login","history","useHistory","orgs","setOrgs","params","orgType","label","value","url","method","result","token","localStorage","setItem","initialValues","username","password","rules","required","maxLength","Password","options","Map","props","useMap","zoom","center","setContainer","onBack","goBack","height","paddingTop","marginTop","akay","Routes","path","component","render","getItem","defaults","withCredentials","baseURL","headers","interceptors","request","use","config","toLowerCase","authorization","response","code","Msg","warning","ReactDOM","StrictMode","requestMethod","param","document","getElementById"],"mappings":"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","file":"static/js/main.75345793.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  List,\r\n  message,\r\n  PageHeader,\r\n  Popover,\r\n  Space,\r\n  Typography,\r\n} from \"antd\";\r\nimport { CloseCircleTwoTone, CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { useRequest } from \"ahooks\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport md5 from \"js-md5\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst VERSION = \"V 2.5.6\";\r\n\r\nconst getRandom = (n, m) => Math.floor(Math.random() * (m - n + 1)) + n;\r\n\r\nconst getList = (pageNum) =>\r\n  new Promise((resolve, reject) => {\r\n    const startTime = moment().subtract(720, \"days\").valueOf();\r\n    const endTime = moment().valueOf();\r\n    axios\r\n      .post(\"running/api/v1/running/recordList\", {\r\n        pageNum,\r\n        pageSize: 100,\r\n        startTime,\r\n        endTime,\r\n      })\r\n      .then((res) => {\r\n        resolve(res.items);\r\n      })\r\n      .catch((e) => {\r\n        reject(\"获取列表失败\");\r\n      });\r\n  });\r\n\r\nconst getUser = () =>\r\n  new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"/health/api/v1/homePage/user\")\r\n      .then((res) => {\r\n        const {\r\n          runningRule: { rule, userCampus },\r\n        } = res;\r\n        //{rule:{},userCampus:{}}\r\n        resolve({\r\n          rule,\r\n          userCampus,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        reject(false);\r\n      });\r\n  });\r\n\r\nconst getStart = (campusId) =>\r\n  new Promise((resolve, reject) => {\r\n    const data = {\r\n      campusId,\r\n      latitude: `30.786842${getRandom(10000, 99999)}`,\r\n      longitude: `103.886128${getRandom(10000, 99999)}`,\r\n      type: 1,\r\n    };\r\n    axios\r\n      .post(\"/running/api/v1/running/start\", { ...data })\r\n      .then((res) => {\r\n        const { randomCircuit } = res;\r\n        //{...randomCircuit}\r\n        resolve({ ...randomCircuit });\r\n      })\r\n      .catch(() => {\r\n        reject(false);\r\n      });\r\n  });\r\nconst getEnd = (circuitString = {}, distance = 0, time = 0) =>\r\n  new Promise((resolve, reject) => {\r\n    //circuitString = { runningRule, randomCircuit }\r\n    //{runningRule:{rule:{},userCampus:{}},randomCircuit:{}}\r\n    const _circuitString = {\r\n      ...circuitString,\r\n      time: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    };\r\n    const data = {\r\n      circuitInfo: {\r\n        circuitString: JSON.stringify(_circuitString),\r\n      },\r\n      version: VERSION,\r\n      valid: 1,\r\n      id: 1,\r\n      type: 1,\r\n      platform: 1,\r\n      stepRate: getRandom(40, 80),\r\n      invalidReason: \"\",\r\n      distance: distance,\r\n      validDistance: distance,\r\n      phone: \"\",\r\n      startTime: moment().valueOf(),\r\n      endTime: moment().add(time, \"seconds\").valueOf(),\r\n      calories: parseInt(distance / 20),\r\n    };\r\n    const segment = [\r\n      data.startTime + getRandom(10, 100),\r\n      data.endTime - getRandom(1500, 2500),\r\n    ];\r\n    data.totalTime = parseInt((segment[1] - segment[0]) / 1000);\r\n    const latitudeArr = [],\r\n      longitudeArr = [],\r\n      speedArr = [];\r\n    const { requireLatitude, requireLongitude } = _circuitString.randomCircuit;\r\n    for (let i = 0; i < 3; i++) {\r\n      latitudeArr.push(requireLatitude[i]);\r\n      longitudeArr.push(requireLongitude[i]);\r\n      speedArr.push(getRandom(2, 20));\r\n    }\r\n    data.circuitInfo = {\r\n      ...data.circuitInfo,\r\n      latitude: [latitudeArr],\r\n      longitude: [longitudeArr],\r\n      segment: [segment],\r\n      speed: speedArr,\r\n      calories: parseInt(distance / 20),\r\n    };\r\n    data.md5 = md5(\r\n      `EndRunningInfo{a='${data.invalidReason}', b=${data.totalTime}, c=${data.distance}, d=${data.type}, e=${data.startTime}, f=${data.endTime}, g='${data.phone}'}`\r\n    );\r\n    const _data = {};\r\n    Object.keys(data)\r\n      .sort()\r\n      .map((item) => (_data[item] = data[item]));\r\n    axios\r\n      .post(`/running/api/v1/running/end3`, _data)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch(() => {\r\n        reject(false);\r\n      });\r\n  });\r\n\r\nfunction Home() {\r\n  const [list, setList] = useState([]);\r\n\r\n  const { loading, run } = useRequest(\r\n    (obj) => {\r\n      return new Promise(async (resolve, reject) => {\r\n        const runningRule = await getUser().catch(() =>\r\n          reject(\"获取用户信息失败\")\r\n        );\r\n\r\n        const randomCircuit = await getStart(\r\n          runningRule.rule.campusId\r\n        ).catch(() => reject(\"获取跑步信息失败\"));\r\n\r\n        const end = await getEnd(\r\n          { runningRule, randomCircuit },\r\n          obj.distance,\r\n          obj.time\r\n        ).catch((e) => {\r\n          reject(\"结束跑步失败\");\r\n        });\r\n        const { invalidReason, valid } = end;\r\n        if (valid === 1) resolve(true);\r\n        else reject(invalidReason);\r\n      });\r\n    },\r\n    {\r\n      manual: true,\r\n      onSuccess: () => {\r\n        message.success(\"跑步完成\");\r\n        listRun();\r\n      },\r\n      onError: (e) => {\r\n        message.error(e);\r\n        listRun();\r\n      },\r\n    }\r\n  );\r\n\r\n  const { loading: listLoading, run: listRun } = useRequest(() => getList(1), {\r\n    manual: true,\r\n    onSuccess: (res) => {\r\n      setList(res);\r\n      console.log(res);\r\n    },\r\n    onError: (e) => {\r\n      message.error(e);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    listRun();\r\n    getUser();\r\n  }, []); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title=\"乐健\"\r\n        subTitle=\"完全免费\"\r\n        extra={\r\n          <Link to=\"/login\">\r\n            <Button type=\"link\">切换账号</Button>\r\n          </Link>\r\n        }\r\n      >\r\n        <Space direction=\"vertical\" style={{ width: \"100%\" }} size=\"large\">\r\n          <Card title=\"告知 更新于2021/03/16\">\r\n            <Typography.Text>\r\n              1.本功能属于纯前端实现，不存在收集，保留用户信息等\r\n              <br />\r\n            </Typography.Text>\r\n            <Typography.Text>\r\n              2.仅供学习研究使用，切勿用于非法或商业等用途\r\n              <br />\r\n            </Typography.Text>\r\n            <Typography.Text>\r\n              3.完全免费开源，请勿上当受骗，如果你是收费看到页面，请及时举报诈骗者\r\n              <br />\r\n            </Typography.Text>\r\n            <Typography.Text>\r\n              4.github:\r\n              <a href=\"https://github.com/jwjjgs/sport_jwjjgs_cn\">\r\n                点我查看开源代码/更新日志\r\n              </a>\r\n              <br />\r\n            </Typography.Text>\r\n          </Card>\r\n          <Form\r\n            onFinish={(e) => {\r\n              run(e);\r\n            }}\r\n          >\r\n            <Form.Item name=\"distance\">\r\n              <Input addonBefore=\"距离\" addonAfter=\"米\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"time\">\r\n              <Input addonBefore=\"时间\" addonAfter=\"秒\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button htmlType=\"submit\" type=\"primary\" block loading={loading}>\r\n                奔跑\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n\r\n          <List\r\n            loading={listLoading}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={list}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    item.valid === 1 ? (\r\n                      <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\r\n                    ) : (\r\n                      <CloseCircleTwoTone twoToneColor=\"#eb2f96\" />\r\n                    )\r\n                  }\r\n                  title={`距离:${item.validDistance}m 时间:${item.totalTime}s`}\r\n                  description={item.startTime}\r\n                />\r\n                <Popover\r\n                  content={\r\n                    <Space direction=\"vertical\">\r\n                      <Link\r\n                        to={{\r\n                          pathname: \"/\",\r\n                          state: {\r\n                            circuitInfo: JSON.parse(item.circuitInfo),\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Button ghost type=\"primary\">\r\n                          查看路线轨迹\r\n                        </Button>\r\n                      </Link>\r\n\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={() => {\r\n                          try {\r\n                            const { latitude, longitude, speed } = JSON.parse(\r\n                              item.circuitInfo\r\n                            );\r\n                            copy(\r\n                              JSON.stringify({ latitude, longitude, speed })\r\n                            );\r\n                            message.success(\"已复制\");\r\n                          } catch {\r\n                            message.error(\"复制失败\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        导出轨迹数据\r\n                      </Button>\r\n                    </Space>\r\n                  }\r\n                >\r\n                  <Button>更多</Button>\r\n                </Popover>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Space>\r\n      </PageHeader>\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Input, message, PageHeader, Select } from \"antd\";\r\nimport { useRequest } from \"ahooks\";\r\nimport { useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [orgs, setOrgs] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/health/api/v2/organization/list\", {\r\n        params: {\r\n          orgType: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setOrgs(res.map((i) => ({ label: i.name, value: i.id })));\r\n      });\r\n  }, []);\r\n\r\n  const { loading, run } = useRequest(\r\n    (obj) => ({\r\n      url: \"/health/api/v1/login\",\r\n      method: \"post\",\r\n      data: { ...obj },\r\n    }),\r\n    {\r\n      manual: true,\r\n      onSuccess: (result) => {\r\n        const { token } = result;\r\n        localStorage.setItem(\"token\", `Bearer ${token}`);\r\n        message.success(\"登陆成功\");\r\n        history.push(\"/\");\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <PageHeader title=\"登录\">\r\n        <Form\r\n          onFinish={(e) => run(e)}\r\n          initialValues={{ username: \"\", password: \"\" }}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"请输入账号\" }]}\r\n          >\r\n            <Input addonBefore=\"账号\" type=\"tel\" maxLength={11} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            maxLength={16}\r\n            rules={[{ required: true, message: \"请输入密码\" }]}\r\n          >\r\n            <Input.Password addonBefore=\"密码\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"orgId\"\r\n            rules={[{ required: true, message: \"请选择地区\" }]}\r\n          >\r\n            <Select options={orgs} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button htmlType=\"submit\" type=\"primary\" block loading={loading}>\r\n              登录\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </PageHeader>\r\n    </>\r\n  );\r\n}\r\nexport default Login;\r\n","import { message, PageHeader } from \"antd\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useMap, APILoader, usePolyline } from \"@uiw/react-baidu-map\";\r\n\r\nfunction Map(props) {\r\n  //const [polyline, setPolyline] = useState(<></>);\r\n  const { setContainer, map } = useMap({\r\n    zoom: 17,\r\n    center: \"四川\",\r\n  });\r\n  /*  const { polyline } = usePolyline({\r\n    map,\r\n    enableEditing,\r\n    strokeOpacity,\r\n    path: [\r\n      { lng: 116.387112, lat: 39.920977 },\r\n      { lng: 116.385243, lat: 39.913063 },\r\n      { lng: 116.394226, lat: 39.917988 },\r\n      { lng: 116.401772, lat: 39.921364 },\r\n      { lng: 116.41248, lat: 39.927893 },\r\n    ],\r\n  }); */\r\n  /*  useEffect(() => {\r\n    if (baiduMap.current) {\r\n      setContainer(baiduMap.current);\r\n    }\r\n  });\r\n  const _polyline = [];\r\n  try {\r\n    const {\r\n      location: {\r\n        state: {\r\n          circuitInfo: { longitude, speed, latitude },\r\n        },\r\n      },\r\n    } = props;\r\n    const combine = (arr, i) => {\r\n      if (typeof i === \"object\") return arr.concat(i);\r\n      arr.push(i);\r\n      return arr;\r\n    };\r\n    const longitude_ = longitude.reduce(combine, []);\r\n    const latitude_ = latitude.reduce(combine, []);\r\n\r\n    for (let i = 0; i < speed.length; i++)\r\n      _polyline.push({\r\n        lng: longitude_[i],\r\n        lat: latitude_[i],\r\n      });\r\n\r\n    console.log(_polyline);\r\n  } catch (e) {\r\n    //return <Redirect to=\"/\" />;\r\n  }\r\n */\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title=\"轨迹显示\"\r\n        onBack={() => {\r\n          props.history.goBack();\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          paddingTop: \"72px\",\r\n          marginTop: \"-72px\",\r\n        }}\r\n      >\r\n        <APILoader akay=\"DmvaTbVhDI5FzcLmG8zcZQdPllicdMXQ\">\r\n          {/*  <div ref={baiduMap} /> */}\r\n        </APILoader>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport Map from \"./pages/Map\";\r\nfunction Routes() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route\r\n          path=\"/\"\r\n          render={() =>\r\n            !localStorage.getItem(\"token\") ? (\r\n              <Redirect to=\"/login\" />\r\n            ) : (\r\n              <Switch>\r\n                <Route path=\"/map\" component={Map} />\r\n                <Route path=\"/\" component={Home} />\r\n              </Switch>\r\n            )\r\n          }\r\n        />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\nexport default Routes;\r\n","import { message as Msg } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = false;\r\naxios.defaults.baseURL = \"https://upes.legym.cn/\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/json;; charset=utf-8\";\r\naxios.interceptors.request.use((config) => {\r\n  if (\"post\" === config.method.toLowerCase() && typeof config.data === \"object\")\r\n    config.data = JSON.stringify(config.data);\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) config.headers.authorization = token;\r\n  return config;\r\n});\r\naxios.interceptors.response.use((res) => {\r\n  const {\r\n    data: { code, message, data },\r\n  } = res;\r\n  if (code !== 0) {\r\n    Msg.warning(message || \"未知原因\");\r\n    return Promise.reject();\r\n  }\r\n  if (message) Msg.success(message);\r\n  return data;\r\n});\r\n","import { UseRequestProvider } from \"ahooks\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Routes from \"./Routes\";\r\nimport \"./boot\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UseRequestProvider\r\n      value={{\r\n        requestMethod: (param) => axios(param),\r\n      }}\r\n    >\r\n      <Routes />\r\n    </UseRequestProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}